type Query {
  questions: [Question!]!
  questionByID(id: ID!): Question
}

interface Question {
  id: ID!
  weight: Float!
}

type TextQuestion implements Question {
  id: ID!
  body: String!
  weight: Float!
}

type ChoiceQuestion implements Question {
  id: ID!
  body: String!
  weight: Float!
  options: [Option!]
}

type Option {
  id: ID!
  body: String!
  weight: Float!
}

interface Answer {
  id: ID!
  questionID: ID!
}

type TextAnswer implements Answer {
  id: ID!
  questionID: ID!
  text: String!
}

type ChoiceAnswer implements Answer {
  id: ID!
  questionID: ID!
  selectedOption: ID!
}

input AnswerInput {
  questionID: ID!
  text: String
  optionID: ID
}

type Mutation {
  submitAnswer(answer: AnswerInput) : Answer
}
